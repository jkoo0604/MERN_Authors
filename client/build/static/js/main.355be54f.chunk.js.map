{"version":3,"sources":["views/All.jsx","components/InputForm.jsx","views/New.jsx","views/Edit.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","flexGrow","margin","marginTop","padding","spacing","height","container","maxHeight","button","color","borderColor","customButton","backgroundColor","createButton","cell","paddingLeft","font","fontWeight","fontSize","All","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","authors","setAuthors","useEffect","axios","get","then","res","data","Paper","className","Grid","justify","item","xs","to","Button","variant","size","startIcon","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","slice","map","row","hover","role","tabIndex","key","_id","name","onClick","id","delete","filter","author","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","e","newPage","onChangeRowsPerPage","target","value","paper","textAlign","palette","text","secondary","InputForm","props","initialName","err","handleSubmit","formText","setName","onSubmit","preventDefault","TextField","required","error","label","helperText","onChange","type","New","errors","setErrors","console","log","post","navigate","catch","errorResponse","response","errObj","Object","keys","properties","message","Edit","loaded","setLoaded","invalidID","setInvalidID","elevation","put","App","from","noThrow","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.355be54f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Grid, Button } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 700,\n        flexGrow: 1,\n        margin: 'auto',\n        marginTop: 20,\n        padding: theme.spacing(1, 4),\n        height: '580px',\n    },\n    container: {\n        maxHeight: 460,\n    },\n    button: {\n        margin: theme.spacing(1),\n        color: '#b0bec5',\n        borderColor: '#b0bec5'\n    },\n    customButton: {\n        margin: theme.spacing(1),\n        backgroundColor: '#ffd54f',\n    },\n    createButton: {\n        margin: theme.spacing(1),\n        backgroundColor: '#4dd0e1',\n        color: 'white'\n    },\n    cell: {\n        paddingLeft: 100,\n    },\n    font: {\n        fontWeight: 600,\n        fontSize: 15,\n    }\n}));\n\nconst All = () => {\n    const classes=useStyles();\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [authors, setAuthors] = useState([]);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/authors')\n            .then(res=>{\n                setAuthors(res.data.authors);\n            })\n    }, []);\n\n    const handleChangePage = (e, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = e => {\n        setRowsPerPage(+e.target.value);\n        setPage(0);\n    };\n\n    const handleDelete = id => {\n        axios.delete('http://localhost:8000/api/authors/delete/' + id)\n            .then(res=>{\n                setAuthors(authors.filter(author=>author._id !== id))\n            })\n    }\n\n    return(\n        <Paper className={classes.root}>\n            <Grid container justify=\"center\">\n                <Grid item xs={10}>\n                    <h1>Favorite Authors</h1>\n                </Grid>\n                <Grid item xs={2}>\n                    <Link to=\"/authors/new\"><Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.createButton} startIcon={<AddIcon/>}>Create</Button></Link>\n                </Grid>\n            </Grid>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\" className={classes.font}>Author</TableCell>\n                            <TableCell align=\"center\" className={classes.font}>Available Actions</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {authors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row._id}>\n                                <TableCell align=\"center\">{row.name}</TableCell>\n                                <TableCell align=\"center\">\n                                    <Link to={`/authors/edit/${row._id}`}><Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.customButton} startIcon={<EditIcon/>}>Edit</Button></Link>\n                                    <Button variant=\"outlined\" size=\"small\" color=\"secondary\" className={classes.button} startIcon={<DeleteIcon/>} onClick={()=>handleDelete(row._id)}>Delete</Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination rowsPerPageOptions={[5, 10, 15]} component=\"div\" count={authors.length} rowsPerPage={rowsPerPage} page={page} onChangePage={handleChangePage} onChangeRowsPerPage={handleChangeRowsPerPage}/>\n        </Paper>\n    )\n}\n\nexport default All;","import React, { useState } from 'react';\nimport { TextField, Button, Paper, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from '@reach/router';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n        width: 400,\n        flexGrow: 1,\n        margin: 'auto',\n        marginTop: 20,\n        padding: theme.spacing(1, 4, 4, 4),\n    },\n    paper: {\n        padding: theme.spacing(4),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    container: {\n        margin: 0,\n    },\n    customButton: {\n        margin: 10,\n    }\n}));\n\nconst InputForm = props => {\n    const classes = useStyles();\n    const { initialName, err, handleSubmit, formText } = props;\n    const [name, setName] = useState(initialName);\n\n    const formSubmit = e => {\n        e.preventDefault();\n        handleSubmit(name);\n    }\n\n    return(\n        <Paper className={classes.root}>\n            <Grid container justify=\"flex-end\" className={classes.container}>\n                <Link to=\"/\"><Button variant=\"outlined\" size=\"small\" className={classes.createButton} startIcon={<HomeIcon/>}>Home</Button></Link>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.container}>\n                <Grid item xs={12}>\n                    <h2>Favorite Authors</h2>\n                </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.container}>\n                <Grid item xs={12}>{formText}</Grid>\n                <Grid item xs={12}>\n                    <form onSubmit={formSubmit}>\n                        <TextField required error={err['name'] ? true : false} id={\"filled-required\" + (err['name'] ? ' filled-error-helper-text' : '')} label=\"Name\" helperText={err['name']} variant=\"filled\" onChange={(e) => setName(e.target.value)} value={name}/>\n                        <Grid item xs={12} justify=\"space-evenly\">\n                            <Link to=\"/\"><Button variant=\"outlined\" size=\"small\" className={classes.customButton}>Cancel</Button></Link>\n                            <Button variant=\"contained\" size=\"small\" color=\"primary\" type=\"submit\" className={classes.customButton}>Submit</Button>\n                        </Grid>\n                    </form>\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default InputForm;","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport InputForm from '../components/InputForm';\n\nconst New = () => {\n    const [errors, setErrors] = useState({});\n\n    const createAuthor = name => {\n        console.log(name);\n        axios.post('http://localhost:8000/api/authors/new', {name})\n            .then(res=>{\n                navigate('/');\n            })\n            .catch(err=>{\n                const errorResponse = err.response.data;\n                const errObj = {};\n                for (const key of Object.keys(errorResponse)) {\n                    errObj[key] = errorResponse[key].properties.message;\n                }\n                setErrors(errObj);\n            })\n    }\n\n    return(\n        <InputForm initialName=\"\" handleSubmit={createAuthor} err={errors} formText=\"Add a new author:\"/>\n    )\n}\n\nexport default New;","import React, { useState, useEffect } from 'react';\nimport { navigate, Link } from '@reach/router';\nimport axios from 'axios';\nimport { Paper, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputForm from '../components/InputForm';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n        flexGrow: 1,\n        textAlign: 'center',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        width: 400,\n    },\n    container: {\n        marginTop: 20,\n    },\n}));\n\nconst Edit = props=> {\n    const classes = useStyles();\n    const {id} = props;\n    const [name, setName] = useState('');\n    const [loaded, setLoaded] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [invalidID, setInvalidID] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/authors/' + id)\n            .then(res=> {\n                setName(res.data.author.name);\n                setLoaded(true);\n            })\n            .catch(err=>{\n                setInvalidID(true)\n                setLoaded(true);\n            });\n    }, []);\n\n    const updateAuthor = name => {\n        axios.put('http://localhost:8000/api/authors/update/' + id, {name})\n            .then(res=>{\n                navigate('/');\n            })\n            .catch(err=>{\n                const errorResponse = err.response.data;\n                const errObj = {};\n                for (const key of Object.keys(errorResponse)) {\n                    errObj[key] = errorResponse[key].properties.message;\n                }\n                setErrors(errObj);\n            })\n    }\n\n    return(     \n            invalidID ? <Grid container justify=\"center\" className={classes.container}><Paper elevation={3} className={classes.paper}><p>Invalid author. Click below to create one.</p><Link to=\"/authors/new\"><Button variant=\"contained\" color=\"primary\">Create</Button></Link></Paper></Grid> :\n            loaded && \n            <InputForm initialName={name} handleSubmit={updateAuthor} err={errors} formText=\"Edit this author:\"/>\n    )\n}\n\nexport default Edit;","import React from 'react';\nimport './App.css';\nimport { Router, Redirect } from '@reach/router';\n\nimport All from './views/All';\nimport New from './views/New';\nimport Edit from './views/Edit';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Redirect from=\"/\" to=\"/authors\" noThrow/>\n        <All path=\"authors/\"/>\n        <New path=\"authors/new\"/>\n        <Edit path=\"authors/edit/:id\"/>\n      </Router>    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}